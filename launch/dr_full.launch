<launch>

    <!-- Including robot_state.launch in order to define the model and start robot_state_publisher -->
    <include file="$(find diff_robot)/launch/robot_state.launch" />

    <!-- Setting name and path of RVIZ config file -->
    <arg name="rvizconfig" default="$(find diff_robot)/rviz/urdf.rviz" />

    <!-- Enable GUI to move joints in rviz -->
    <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" />
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rvizconfig)" required="true" />

    <!-- Starting a Gazebo empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="false" />
        <arg name="gui" value="true" />
        <arg name="paused" value="false" />
        <arg name="use_sim_time" value="true" />
        <arg name="headless" value="false" />
    </include>
    <!-- Spawn the robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

    <!-- Loading controllers configuration yaml -->
    <rosparam command="load" file="$(find diff_robot)/config/joints.yaml" ns="dr_joint_state_controller" />
    <rosparam command="load" file="$(find diff_robot)/config/diffdrive.yaml" ns="dr_diff_drive_controller" />

    <!-- Starting the controller manager node -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" args=  "dr_joint_state_controller
                dr_diff_drive_controller" />

    <!-- Enable GUI to control wheels -->
    <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
        <param name="default_topic" value="/dr_diff_drive_controller/cmd_vel" />
    </node>

</launch>